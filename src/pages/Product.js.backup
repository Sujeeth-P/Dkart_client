import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { useCart } from '../context/CartContext';
import { productAPI } from '../utils/api.js'; // âœ… FIXED IMPORT
import '../Components/css/CartButton.css';

const Product = () => {
    const [products, setProducts] = useState([]);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState(null);
    const [searchTerm, setSearchTerm] = useState('');
    const [selectedCategory, setSelectedCategory] = useState('all');
    const [isAuthenticated, setIsAuthenticated] = useState(false);
    const [showLoginAlert, setShowLoginAlert] = useState(false);
    const [addedToCart, setAddedToCart] = useState(null);
    const [animatingCartProductId, setAnimatingCartProductId] = useState(null);

    const { addToCart } = useCart();
    const navigate = useNavigate();

    // Fetch products
    useEffect(() => {
        const fetchProducts = async () => {
            try {
                setLoading(true);
                const response = await productAPI.getProducts();
                if (response.success) {
                    setProducts(response.products);
                } else {
                    setError('Failed to fetch products');
                }
            } catch (err) {
                setError('Error loading products: ' + (err.message || 'Unknown error'));
            } finally {
                setLoading(false);
            }
        };
        fetchProducts();
    }, []);

    // Check login
    useEffect(() => {
        const token = localStorage.getItem('userToken');
        const userData = localStorage.getItem('userData');
        setIsAuthenticated(!!(token && userData)); // âœ… FIXED BOOL CONVERSION
    }, []);

    const filteredProducts = products.filter(product => {
        const name = product.name?.toLowerCase() || '';
        const category = product.category?.toLowerCase() || '';
        const matchesSearch = name.includes(searchTerm.trim().toLowerCase());
        const matchesCategory = selectedCategory === 'all' || category === selectedCategory.toLowerCase();
        return matchesSearch && matchesCategory;
    });

    const categories = [...new Set(products.map(p => p.category || 'Uncategorized'))];

    const handleAddToCart = (product) => {
        if (!isAuthenticated) {
            setShowLoginAlert(true);
            setTimeout(() => setShowLoginAlert(false), 3000);
            return;
        }

        addToCart({
            id: product._id,
            name: product.name,
            price: product.price,
            image: product.image,
            stock: product.stock
        });

        setAnimatingCartProductId(product._id);
        setAddedToCart(product._id);
        setTimeout(() => {
            setAnimatingCartProductId(null);
            setAddedToCart(null);
        }, 1500);
    };

    if (loading) {
        return <div style={{ padding: '20px', textAlign: 'center' }}>Loading products...</div>;
    }

    if (error) {
        return (
            <div style={{ padding: '20px', color: 'red' }}>
                <h3>Error</h3>
                <p>{error}</p>
            </div>
        );
    }

    return (
        <div style={{ padding: '20px' }}>
            {showLoginAlert && (
                <div style={{ backgroundColor: '#fff3cd', padding: '10px', margin: '10px 0', borderRadius: '4px' }}>
                    Please login to add items to your cart!
                </div>
            )}

            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '20px' }}>
                <h1>Our Products</h1>
                <span>{filteredProducts.length} Products</span>
            </div>

            <div style={{ display: 'flex', gap: '10px', marginBottom: '20px' }}>
                <input
                    type="text"
                    placeholder="Search products..."
                    value={searchTerm}
                    onChange={(e) => setSearchTerm(e.target.value)}
                    style={{ padding: '8px', borderRadius: '4px', border: '1px solid #ccc' }}
                />
                <select
                    value={selectedCategory}
                    onChange={(e) => setSelectedCategory(e.target.value)}
                    style={{ padding: '8px', borderRadius: '4px', border: '1px solid #ccc' }}
                >
                    <option value="all">All Categories</option>
                    {categories.map(category => (
                        <option key={category} value={category}>{category}</option>
                    ))}
                </select>
            </div>

            <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fill, minmax(250px, 1fr))', gap: '20px' }}>
                {filteredProducts.length === 0 ? (
                    <div style={{ textAlign: 'center', padding: '50px' }}>
                        <h3>No products found</h3>
                        <p>Try adjusting your search or filter criteria</p>
                    </div>
                ) : (
                    filteredProducts.map(product => (
                        <div key={product._id} style={{
                            border: '1px solid #ddd',
                            borderRadius: '8px',
                            padding: '15px',
                            display: 'flex',
                            flexDirection: 'column'
                        }}>
                            <img
                                src={product.image}
                                alt={product.name}
                                style={{
                                    width: '100%',
                                    height: '200px',
                                    objectFit: 'cover',
                                    borderRadius: '4px',
                                    marginBottom: '10px'
                                }}
                            />

                            <div style={{ flex: 1 }}>
                                <span style={{
                                    backgroundColor: '#f8f9fa',
                                    padding: '2px 8px',
                                    borderRadius: '4px',
                                    fontSize: '12px',
                                    marginBottom: '8px',
                                    display: 'inline-block'
                                }}>
                                    {product.category}
                                </span>

                                <h3 style={{
                                    fontSize: '16px',
                                    margin: '8px 0',
                                    minHeight: '40px'
                                }}>
                                    {product.name}
                                </h3>

                                <p style={{
                                    color: '#666',
                                    fontSize: '14px',
                                    minHeight: '40px'
                                }}>
                                    {(product.description || '').substring(0, 100)}...
                                </p>

                                <div style={{ margin: '10px 0' }}>
                                    <div style={{ display: 'flex', alignItems: 'center', marginBottom: '5px' }}>
                                        <span style={{ color: '#ffc107', marginRight: '5px' }}>
                                            {'â˜…'.repeat(Math.floor(product.rating?.average || 0))}
                                            {'â˜†'.repeat(5 - Math.floor(product.rating?.average || 0))}
                                        </span>
                                        <small style={{ color: '#666' }}>
                                            ({product.rating?.count || 0} reviews)
                                        </small>
                                    </div>

                                    <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>
                                        <div>
                                            <h4 style={{ color: '#007bff', margin: '0' }}>${product.price}</h4>
                                            {product.stock > 0 && (
                                                <small style={{ color: '#28a745' }}>
                                                    âœ“ In Stock ({product.stock})
                                                </small>
                                            )}
                                        </div>
                                    </div>
                                </div>

                                <button
                                    className={`cart-button ${addedToCart === product._id ? "clicked" : ""}`}
                                    onClick={() => handleAddToCart(product)}
                                    disabled={product.stock === 0 || animatingCartProductId === product._id}
                                    title={!isAuthenticated ? "Login required to add to cart" : "Add to cart"}
                                    style={{
                                        width: '100%',
                                        opacity: !isAuthenticated ? 0.7 : 1,
                                        cursor: product.stock === 0 ? 'not-allowed' : 'pointer'
                                    }}
                                >
                                    <span className="add-to-cart">
                                        {product.stock === 0 ? 'Out of Stock' : 'Add to Cart'}
                                    </span>
                                    <span className="added">Added!</span>
                                    <span className="fa-shopping-cart">ðŸ›’</span>
                                    <span className="fa-box">ðŸ“¦</span>
                                </button>
                            </div>
                        </div>
                    ))
                )}
            </div>
        </div>
    );
};

export default Product;
